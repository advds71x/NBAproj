I"Ž<h2 id="rmarkdown-and-html-files">Rmarkdown and HTML Files</h2>
<ul>
  <li>Rmarkdown file: description.Rmd</li>
  <li><a href="https://github.com/advds71x/nba_data_analysis">Github Repo link</a></li>
  <li><a href="https://advds71x.github.io/nba_data_analysis/description">Compiled HTML link</a></li>
</ul>

<h3 id="data">./data</h3>
<ul>
  <li>game_stats.csv</li>
  <li>game_stats_all.csv</li>
  <li>post_62_games_pred.rds</li>
  <li>pre_20_games.rds</li>
  <li>team_stats.csv</li>
  <li>team_stats_all.csv</li>
  <li>test_set_pred.rds</li>
</ul>

<h3 id="nba_simulation_shiny">./nba_simulation_shiny</h3>
<ul>
  <li>ShinyApp source code</li>
  <li><a href="https://kate-yueyi-li.shinyapps.io/nba_simulation_shiny/">ShinyApp link</a></li>
</ul>

<h3 id="plots">./plots</h3>

<h3 id="source">./source</h3>
<ul>
  <li>EDA_visualize.R</li>
  <li>data_integration.R</li>
  <li>data_scraping.R</li>
  <li>data_wrangling.R</li>
  <li>feature_eng.R</li>
  <li>model_build.R</li>
  <li>simulation.R</li>
</ul>

<h2 id="wrap-up-functions">Wrap-Up Functions</h2>
<ul>
  <li>Data Scraping
    <ul>
      <li><code class="highlighter-rouge">get_schedule_data(year,month)</code>: obtain the game schedules and results in specific year and month</li>
      <li><code class="highlighter-rouge">combine_game_data()</code>: combine the game schedules data</li>
      <li><code class="highlighter-rouge">get_team_stats(year)</code>: obtain the team-level data (30 teams in the league) of first 20 games in specific year</li>
    </ul>
  </li>
  <li>Data Wrangling and Feature Engineering
    <ul>
      <li><code class="highlighter-rouge">get_ws_data(year)</code>: obtain the win share data in specific year</li>
      <li><code class="highlighter-rouge">get_team_year_feature(year)</code>: obtain the team performance feature vectors in specific year</li>
      <li><code class="highlighter-rouge">get_game_year_feature(year)</code>: obtain the game results in tidy format in specific year</li>
      <li><code class="highlighter-rouge">get_injury_data(year)</code>, <code class="highlighter-rouge">combine_injury_data()</code>: obtain and combine the injury data</li>
    </ul>
  </li>
  <li>EDA
    <ul>
      <li><code class="highlighter-rouge">team_def_off_plot(year)</code>: show each teamâ€™s defense vs offense in specific year</li>
      <li><code class="highlighter-rouge">team_rank_plot(year,Nfirst)</code>: show each teamâ€™s season rank vs first N gamesâ€™ rank in specific year</li>
      <li><code class="highlighter-rouge">home_way_plot(year)</code>: show each teamâ€™s home and away records in specific year; show western vs eastern records</li>
      <li><code class="highlighter-rouge">team_ws_plot(year)</code>: show each teamâ€™s highest winshare in specific year</li>
      <li><code class="highlighter-rouge">player_ws_plot()</code>: show the winshare of top players in the league in recent years</li>
    </ul>
  </li>
  <li>Model Building
    <ul>
      <li><code class="highlighter-rouge">get_train_test_data(year,firstN)</code>: obtain the training and test data of first N games in specific year.</li>
      <li><code class="highlighter-rouge">build_logit_model_year(train_year, test_year, firstN)</code>: use the first N games of train_year to build the model, and test the model on test_year. return the prediction results (W/L) and winning probability of each game.</li>
    </ul>
  </li>
  <li>Integrative Prediction
    <ul>
      <li><code class="highlighter-rouge">combine_season_data()</code>: combine the team performance feature data of multiple seasons</li>
      <li><code class="highlighter-rouge">team_pc_plot()</code>: create the PC plot for the team performances of all the 30 teams in multiple seasons; the distance matrix of season data</li>
      <li><code class="highlighter-rouge">team_cluster_plot()</code>: create the cluster plot for each team in multiple seasons</li>
      <li><code class="highlighter-rouge">win_prob_prediction(train_year, test_year,firstN,year_effect)</code>: The winning probability prediction function allow for year_effect</li>
    </ul>
  </li>
  <li>Simulation
    <ul>
      <li><code class="highlighter-rouge">WL_record_cal(game_schedule,WL_record)</code>: calculate the W/L records for each team given the game schedule</li>
      <li><code class="highlighter-rouge">game_simulation(pred_result,B,year,Nfirst)</code>: given the predict results in specific year, repeat the game simulation for B times</li>
    </ul>
  </li>
</ul>
:ET